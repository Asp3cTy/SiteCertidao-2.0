document.addEventListener('DOMContentLoaded', () => {
    const form = document.getElementById('certidaoForm');
    const temProtocolo = document.getElementById('temProtocolo');
    const editIndexInput = document.getElementById('editIndex');
    const submitButton = document.getElementById('submitButton');
    const toggleDarkModeButton = document.getElementById('toggleDarkMode');
    const addProtocoloButton = document.getElementById('addProtocoloButton');
    let certidoesChart;
    let chart;
    let protocolos = [];
    let currentPage = 1;
    const itemsPerPage = 3;

    // Definir a data atual no campo de dataPedido
    const dataPedido = document.getElementById('dataPedido');
    function setTodayDate() {
        if (dataPedido) {
            const today = new Date().toISOString().split('T')[0];
            dataPedido.value = today;
        }
    }
    setTodayDate();

    // Inicializar o gráfico de certidões se ele existir na página
    if (document.getElementById('certidoesChart')) {
        certidoesChart = document.getElementById('certidoesChart').getContext('2d');
        chart = new Chart(certidoesChart, {
            type: 'bar',
            data: {
                labels: ['BALCÃO', 'ARIRJ', 'E-CARTÓRIO'],
                datasets: [{
                    label: 'Quantidade de Certidões',
                    data: [0, 0, 0],
                    backgroundColor: [
                        'rgba(255, 99, 132, 0.2)',
                        'rgba(54, 162, 235, 0.2)',
                        'rgba(75, 192, 192, 0.2)'
                    ],
                    borderColor: [
                        'rgba(255, 99, 132, 1)',
                        'rgba(54, 162, 235, 1)',
                        'rgba(75, 192, 192, 1)'
                    ],
                    borderWidth: 1
                }]
            },
            options: {
                scales: {
                    y: {
                        beginAtZero: true
                    }
                }
            }
        });
        updateChart();
    }

    // Carregar modo noturno do armazenamento local
    const isDarkMode = localStorage.getItem('darkMode') === 'true';
    if (isDarkMode) {
        toggleDarkMode();
    }

    // Alternar modo noturno
    toggleDarkModeButton.addEventListener('click', toggleDarkMode);

    function toggleDarkMode() {
        document.body.classList.toggle('dark-mode');
        document.querySelector('.navbar').classList.toggle('dark-mode');
        document.querySelectorAll('.form-control').forEach(el => el.classList.toggle('dark-mode'));
        document.querySelector('.table')?.classList.toggle('dark-mode');
        document.querySelector('.modal-content')?.classList.toggle('dark-mode');
        const isDarkModeEnabled = document.body.classList.contains('dark-mode');
        localStorage.setItem('darkMode', isDarkModeEnabled);
        toggleDarkModeButton.textContent = isDarkModeEnabled ? 'Modo Claro' : 'Modo Noturno';
    }

    if (temProtocolo) {
        temProtocolo.addEventListener('change', (e) => {
            if (e.target.value === 'sim') {
                $('#protocoloModal').modal('show');
            } else {
                protocolos = [];
            }
        });
    }

    if (addProtocoloButton) {
        addProtocoloButton.addEventListener('click', () => {
            const numeroProtocolo = document.getElementById('numeroProtocolo').value;
            const dadosProtocolo = document.getElementById('dadosProtocolo').value;
            const dataProtocolo = document.getElementById('dataProtocolo').value;

            if (numeroProtocolo && dadosProtocolo && dataProtocolo) {
                protocolos.push({ numeroProtocolo, dadosProtocolo, dataProtocolo });
                document.getElementById('numeroProtocolo').value = '';
                document.getElementById('dadosProtocolo').value = '';
                document.getElementById('dataProtocolo').value = '';
            }
        });
    }

    if (form) {
        form.addEventListener('submit', (e) => {
            e.preventDefault();
            const numeroMatricula = document.getElementById('numeroMatricula').value;
            const numeroPedido = document.getElementById('numeroPedido').value;
            const dataPedido = document.getElementById('dataPedido').value;
            const tipoCertidao = document.getElementById('tipoCertidao').value;
            const temProtocoloValue = temProtocolo.value;
            const editIndex = editIndexInput.value;

            if (editIndex) {
                updateCertidao(editIndex, numeroMatricula, numeroPedido, dataPedido, tipoCertidao, temProtocoloValue, protocolos);
            } else {
                addCertidao(numeroMatricula, numeroPedido, dataPedido, tipoCertidao, temProtocoloValue, protocolos);
            }

            form.reset();
            setTodayDate();  // Atualiza a data para a data atual após resetar o formulário
            protocolos = [];
            editIndexInput.value = '';
            submitButton.textContent = 'Adicionar Certidão';
            alert('Certidão salva com sucesso!');
        });
    }

    function addCertidao(numeroMatricula, numeroPedido, dataPedido, tipoCertidao, temProtocolo, protocolos) {
        const certidoes = getCertidoes();
        certidoes.push({ numeroMatricula, numeroPedido, dataPedido, tipoCertidao, temProtocolo, protocolos });
        localStorage.setItem('certidoes', JSON.stringify(certidoes));
        updateChart();
        renderCertidoes();
    }

    function updateCertidao(index, numeroMatricula, numeroPedido, dataPedido, tipoCertidao, temProtocolo, protocolos) {
        const certidoes = getCertidoes();
        certidoes[index] = { numeroMatricula, numeroPedido, dataPedido, tipoCertidao, temProtocolo, protocolos };
        localStorage.setItem('certidoes', JSON.stringify(certidoes));
        updateChart();
        renderCertidoes();
    }

    function getCertidoes() {
        const certidoes = localStorage.getItem('certidoes');
        return certidoes ? JSON.parse(certidoes) : [];
    }

    function renderCertidoes() {
        const certidoes = getCertidoes().reverse();  // Inverte a ordem das certidões
        const certidoesList = document.getElementById('certidoesList');
        const pagination = document.getElementById('pagination');
        if (certidoesList && pagination) {
            const currentPage = parseInt(localStorage.getItem('currentPage') || '1', 10);
            const totalPages = Math.ceil(certidoes.length / itemsPerPage);
            const start = (currentPage - 1) * itemsPerPage;
            const end = start + itemsPerPage;
            const paginatedCertidoes = certidoes.slice(start, end);

            certidoesList.innerHTML = paginatedCertidoes.map((certidao, index) => `
                <tr>
                    <td>${certidao.numeroMatricula}</td>
                    <td>${certidao.numeroPedido}</td>
                    <td>${certidao.dataPedido}</td>
                    <td>${certidao.tipoCertidao}</td>
                    <td>${certidao.temProtocolo === 'sim' ? 'Sim' : 'Não'}</td>
                    <td>
                        <button class="btn btn-info btn-sm btn-custom" onclick="showProtocolos(${start + index})">Protocolos</button>
                    </td>
                    <td>
                      
                        <button class="btn btn-danger btn-sm btn-custom" onclick="deleteCertidao(${start + index})">Excluir</button>
                    </td>
                </tr>
            `).join('');

            pagination.innerHTML = `
                <li class="page-item ${currentPage === 1 ? 'disabled' : ''}">
                    <a class="page-link" href="#" onclick="changePage(${currentPage - 1})">Anterior</a>
                </li>
                ${Array.from({ length: totalPages }, (_, i) => `
                    <li class="page-item ${currentPage === i + 1 ? 'active' : ''}">
                        <a class="page-link" href="#" onclick="changePage(${i + 1})">${i + 1}</a>
                    </li>
                `).join('')}
                <li class="page-item ${currentPage === totalPages ? 'disabled' : ''}">
                    <a class="page-link" href="#" onclick="changePage(${currentPage + 1})">Próximo</a>
                </li>
            `;
        }
    }

    function updateChart() {
        if (chart) {
            const certidoes = getCertidoes();
            const counts = { 'BALCAO': 0, 'ARIRJ': 0, 'E-CARTORIO': 0 };

            certidoes.forEach(certidao => {
                if (counts[certidao.tipoCertidao] !== undefined) {
                    counts[certidao.tipoCertidao]++;
                }
            });

            chart.data.datasets[0].data = [counts['BALCAO'], counts['ARIRJ'], counts['E-CARTORIO']];
            chart.update();
        }
    }

    window.changePage = function(page) {
        const totalPages = Math.ceil(getCertidoes().length / itemsPerPage);
        if (page >= 1 && page <= totalPages) {
            localStorage.setItem('currentPage', page);
            renderCertidoes();
        }
    };

    window.showProtocolos = function(index) {
        const certidoes = getCertidoes();
        const certidao = certidoes[index];
        const modalBody = document.getElementById('modalBody');
        modalBody.innerHTML = certidao.protocolos.map((protocolo, i) => `
            <div>
                <strong>Protocolo ${i + 1}:</strong><br>
                Número: ${protocolo.numeroProtocolo}, Dados: ${protocolo.dadosProtocolo}, Data: ${protocolo.dataProtocolo}
            </div>
        `).join('');
        $('#protocoloModal').modal('show');
    };

    window.editCertidao = function(index) {
        const certidoes = getCertidoes();
        const certidao = certidoes[index];
        document.getElementById('numeroMatricula').value = certidao.numeroMatricula;
        document.getElementById('numeroPedido').value = certidao.numeroPedido;
        document.getElementById('dataPedido').value = certidao.dataPedido;
        document.getElementById('tipoCertidao').value = certidao.tipoCertidao;
        temProtocolo.value = certidao.temProtocolo;

        if (certidao.temProtocolo === 'sim') {
            protocolos = certidao.protocolos;
        } else {
            protocolos = [];
        }

        editIndexInput.value = index;
        submitButton.textContent = 'Salvar Alterações';
    };

    window.deleteCertidao = function(index) {
        const certidoes = getCertidoes();
        certidoes.splice(index, 1);
        localStorage.setItem('certidoes', JSON.stringify(certidoes));
        updateChart();
        renderCertidoes();
    };

    if (document.getElementById('certidoesList')) {
        renderCertidoes();
    }
});
